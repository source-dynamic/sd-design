"use strict";(self.webpackChunksd_design=self.webpackChunksd_design||[]).push([[638],{"./stories/examples/list/List.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{List:()=>List_stories_List,__namedExportsOrder:()=>__namedExportsOrder,default:()=>List_stories});var StoryComp=__webpack_require__("./stories/_utils/StoryComp.tsx");var owl_es=__webpack_require__("./node_modules/@odoo/owl/dist/owl.es.js"),src=__webpack_require__("./src/index.ts"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),list=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./stories/examples/list/list.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(list.Z,options);list.Z&&list.Z.locals&&list.Z.locals;class ListRoot extends owl_es.wA{static components={List:src.aV,InputNumber:src.Rn};state=(0,owl_es.eJ)({bordered:!0,size:"middle",virtual:!1});compState=(0,owl_es.eJ)({list:Array.from({length:50},((_,i)=>({title:`title${i}`,content:`content${i}`}))),largeList:Array.from({length:50},((_,i)=>({title:`title${i}`,content:`content${i}`}))),turnLine:50});listRef={current:null};handleTurn(){this.listRef.current?.scrollTo(this.compState.turnLine)}onChangeTurnLine(value){this.compState.turnLine=value}onScroll(e,position){if("end"===position){const preIndex=this.compState.largeList.length;this.compState.largeList=this.compState.largeList.concat(Array.from({length:100},((_,i)=>({title:`title${preIndex+i}`,content:`content${preIndex+i}`}))))}}onRendered(){console.log(this.compState.largeList.length)}static template=owl_es.Ls`
<div class="list-container">
    <!-- 普通列表  -->
    <t t-if="!state.virtual">
        <List className="'list'" dataSource="compState.list" bordered="state.bordered" size="state.size">
            <t t-set-slot="header">
                header
            </t>
            <t t-set-slot="footer">
                footer
            </t>
            <t t-set-slot="item" t-slot-scope="scope">
                item-<t t-esc="scope.data.title"/>
            </t>
        </List>
    </t>
    <t t-else="">
        <!-- 虚拟滚动列表  -->
        <List ref="listRef" className="'list'" dataSource="compState.largeList" bordered="state.bordered" size="state.size" virtual="true" itemHeight="30" 
            onScroll.bind="onScroll" onRendered.bind="onRendered">
            <t t-set-slot="item" t-slot-scope="scope">
                <div>item-<t t-esc="scope.data.title"/></div>
            </t>
        </List>
        <div class="input-container">
            <button t-on-click="handleTurn">跳转到</button>
            <InputNumber value="compState.turnLine" onChange.bind="onChangeTurnLine">
                <t t-set-slot="addonAfter">行</t>
            </InputNumber>
        </div>
    </t>
</div>   
    `}const List_stories={title:"布局/List 列表",parameters:{layout:"centered"}},List_stories_List={parameters:{docs:{source:{code:'import { Component, useState, xml } from \'@odoo/owl\';\r\nimport { InputNumber, List } from \'../../../src\';\r\nimport \'./list.scss\';\r\nimport { Position } from \'../../../src/components/list/VirtualList\';\r\n\r\nexport default class ListRoot extends Component {\r\n    static components = { List, InputNumber };\r\n\r\n    state = useState<any>({\r\n        bordered: true,\r\n        size: \'middle\',\r\n        virtual: false\r\n    });\r\n\r\n    compState = useState({\r\n        list: Array.from({ length: 50 }, (_, i) => ({\r\n            title: `title${i}`,\r\n            content: `content${i}`\r\n        })),\r\n        largeList: Array.from({ length: 50 }, (_, i) => ({\r\n            title: `title${i}`,\r\n            content: `content${i}`\r\n        })),\r\n        turnLine: 50\r\n    });\r\n\r\n    listRef: any = { current: null };\r\n\r\n    /**\r\n     * 跳转到指定行\r\n     */\r\n    handleTurn() {\r\n        this.listRef.current?.scrollTo(this.compState.turnLine)\r\n    }\r\n\r\n    /**\r\n     * 修改跳转行回调\r\n     * @param value\r\n     */\r\n    onChangeTurnLine(value) {\r\n        this.compState.turnLine = value;\r\n    }\r\n\r\n    /**\r\n     * 虚拟滚动列表滚动回调\r\n     * @param e 事件Event\r\n     * @param position 滚动位置, start | end | mid\r\n     */\r\n    onScroll(e: MouseEvent, position: Position) {\r\n        if (position === \'end\') {\r\n            const preIndex = this.compState.largeList.length;\r\n            this.compState.largeList = this.compState.largeList.concat(\r\n                Array.from({ length: 100 }, (_, i) => ({\r\n                    title: `title${preIndex + i}`,\r\n                    content: `content${preIndex + i}`\r\n                }))\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 虚拟滚动列表渲染完成回调\r\n     */\r\n    onRendered() {\r\n        console.log(this.compState.largeList.length);\r\n    }\r\n\r\n    static template = xml`\r\n<div class="list-container">\r\n    \x3c!-- 普通列表  --\x3e\r\n    <t t-if="!state.virtual">\r\n        <List className="\'list\'" dataSource="compState.list" bordered="state.bordered" size="state.size">\r\n            <t t-set-slot="header">\r\n                header\r\n            </t>\r\n            <t t-set-slot="footer">\r\n                footer\r\n            </t>\r\n            <t t-set-slot="item" t-slot-scope="scope">\r\n                item-<t t-esc="scope.data.title"/>\r\n            </t>\r\n        </List>\r\n    </t>\r\n    <t t-else="">\r\n        \x3c!-- 虚拟滚动列表  --\x3e\r\n        <List ref="listRef" className="\'list\'" dataSource="compState.largeList" bordered="state.bordered" size="state.size" virtual="true" itemHeight="30" \r\n            onScroll.bind="onScroll" onRendered.bind="onRendered">\r\n            <t t-set-slot="item" t-slot-scope="scope">\r\n                <div>item-<t t-esc="scope.data.title"/></div>\r\n            </t>\r\n        </List>\r\n        <div class="input-container">\r\n            <button t-on-click="handleTurn">跳转到</button>\r\n            <InputNumber value="compState.turnLine" onChange.bind="onChangeTurnLine">\r\n                <t t-set-slot="addonAfter">行</t>\r\n            </InputNumber>\r\n        </div>\r\n    </t>\r\n</div>   \r\n    `;\r\n}\r\n'}}},args:{bordered:!1,size:"middle",virtual:!1},argTypes:{bordered:{description:"边框模式"},size:{description:"尺寸",control:"select",options:["small","middle","large"]},virtual:{description:"开启虚拟滚动"}},render:(0,StoryComp.p)(ListRoot)};List_stories_List.parameters={...List_stories_List.parameters,docs:{...List_stories_List.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      source: {\n        code: ListCompRaw\n      }\n    }\n  },\n  args: {\n    bordered: false,\n    size: 'middle',\n    virtual: false\n  },\n  argTypes: {\n    bordered: {\n      description: '边框模式'\n    },\n    size: {\n      description: '尺寸',\n      control: 'select',\n      options: ['small', 'middle', 'large']\n    },\n    virtual: {\n      description: '开启虚拟滚动'\n    }\n  },\n  render: renderStoryComp(ListComp)\n}",...List_stories_List.parameters?.docs?.source}}};const __namedExportsOrder=["List"]},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./stories/examples/list/list.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".list-container{box-sizing:border-box;padding:20px 0;height:500px;overflow:hidden;width:700px;display:flex;flex-direction:column;gap:15px}.list-container .input-container{width:300px}.list-container .input-container button{border:1px solid #ccc;padding:4px 8px;border-radius:5px;margin-right:10px;color:white;background-color:rgba(var(--primary-color-base), 0.7)}.list-container .input-container button:hover{background-color:rgba(var(--primary-color-base), 1)}\n","",{version:3,sources:["webpack://./stories/examples/list/list.scss"],names:[],mappings:"AAAA,gBACE,qBAAsB,CACtB,cAAe,CACf,YAAa,CACb,eAAgB,CAChB,WAAY,CACZ,YAAa,CACb,qBAAsB,CACtB,QAAS,CARX,iCAWI,WAAY,CAXhB,wCAcM,qBAAsB,CACtB,eAAgB,CAChB,iBAAkB,CAClB,iBAAkB,CAClB,WAAY,CACZ,qDAAsD,CAnB5D,8CAsBQ,mDAAoD",sourcesContent:[".list-container {\r\n  box-sizing: border-box;\r\n  padding: 20px 0;\r\n  height: 500px;\r\n  overflow: hidden;\r\n  width: 700px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n\r\n  .input-container {\r\n    width: 300px;\r\n\r\n    button {\r\n      border: 1px solid #ccc;\r\n      padding: 4px 8px;\r\n      border-radius: 5px;\r\n      margin-right: 10px;\r\n      color: white;\r\n      background-color: rgba(var(--primary-color-base), 0.7);\r\n\r\n      &:hover {\r\n        background-color: rgba(var(--primary-color-base), 1);\r\n      }\r\n    }\r\n  }\r\n}\r\n"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);
//# sourceMappingURL=examples-list-List-stories.f05b32c6.iframe.bundle.js.map